if(1==1)  // define the parameters and display titles 
{

_SECTION_BEGIN("Formula 1");
_N(Title = StrFormat("{{NAME}} - {{INTERVAL}} {{VALUES}}"));

x=Param("xposn",1,0,1000,1);
y=Param("yposn",1,0,1000,1);
//sktitle = ParamStr("Title","skself1");
sktitle = ParamStr("Title","sk3");
skaction="Action";
skstepsize=Param( "StepSL", 50, 0, 200 );
skstepsizeP=Param( "StepProfit", 30, 0, 200 );
BrickSize = Param( "BrickSize ",5, 0, 200,1 );
skts=Interval();
sktime=TimeNum();
skdate=DateTime();
skday=Day();
skmonth=Month();
skyear=Year();
skhour=Hour();
skminute=Minute();
skactionmsg="\nAction:";
skname=Name(); // get the name 
printf("\nname:"+skname+"\nDate"+Day());
GfxTextOut( sktitle +"|"+ Date()+"|"+skday, x+700, y+5 );
//Buy=Sell=Short=Cover=0;

//TimeFrameRestore();
//TimeFrameSet(1);
}

function printaction(skval,skmsg)
{
global skaction;
if(StrToNum(NumToStr(skval))==1)
skactionmsg+=skmsg;
}

if(1==1) // plot the chart needed 
{
_SECTION_BEGIN("Price");
SetChartOptions(0,chartShowArrows|chartShowDates);
_N(Title = StrFormat("{{NAME}} - {{INTERVAL}} {{DATE}} Open %g, Hi %g, Lo %g, Close %g (%.1f%%) {{VALUES}}", O, H, L, C, SelectedValue( ROC( C, 1 ) ) ));
Plot( C, "Close", ParamColor("Color", colorDefault ), styleNoTitle | ParamStyle("Style") |stylebar ); 
_SECTION_END();
//Plot(Open,"\nClose",IIf(Close>Open,colorGreen,colorRed ),stylebar);

}

if(1==0) // print if any last action was done 
{
skbb=BarsSince(Buy);
sksb=BarsSince(Sell);
skwb=BarsSince(Short);
skcb=BarsSince(cover);

printaction(1,"\nskbb:"+skbb);
printaction(1,"sksb:"+sksb);
printaction(1,"skcb:"+skcb);
printaction(1,"skwb:"+skwb);
nobuyyet=skbb==0;
nowriteyet=skwb==0;

noactionyet=(nowriteyet AND nobuyyet) ;

buyon=(skbb>sksb OR skbb=0 OR skbb>skcb OR skbb>skwb);
buyoff=skbb<sksb AND skbb<skwb AND skbb < skcb AND skbb>0 ;


writeon=skwb!=0 AND (skwb<skcb OR skcb==0) AND (skwb<skbb OR skbb==0) AND (skwb<sksb OR sksb==0) ;
writeoff=skwb==0 OR (skbb>0 AND skwb>skbb OR skcb>0 AND skwb>skcb OR sksb>0 AND skwb>sksb);

 
noactionnow=writeoff AND buyoff ; 

printaction(1,"\nbuyon:"+buyon);
printaction(1,"buyoff:"+buyoff);
printaction(1,"writeon:"+writeon);
printaction(1,"writeoff:"+writeoff);
printaction(1,"noactionnow:"+noactionnow);
printaction(1,"noactionyet:"+noactionyet);
}

if(1==0) // draw the area of the profit or loss as bars 
{
skprofit=IIf(Sell,O-BuyPrice,IIf(Cover,O-CoverPrice,Null));
skprofitcolor=IIf(skprofit>=0,IIf(Sell,colorGreen,colorBlue),IIf(Sell,colorRed,colorBrown));
Plot(skprofit, "Profit", skprofitcolor, styleArea|styleOwnScale, -50, 50, 0, 1,1);
//Plot(IIf(sklong , BuyPrice,Null), "XP", colorGreen, styleThick, Null, Null, 0, 1, 1);
Plot(IIf(skshort , ShortPrice,Null), "XP", colorRed, styleThick	, Null, Null, 0, 1, 1);
/*
SLtriggershape=(Cover_SSL OR Sell_LSL ) * shapeHollowCircle * ( Sell OR Cover ) ;
TGtriggershape=(Cover_ST1 OR Sell_LT1 ) * shapeStar * ( Sell OR Cover );
sellcovertriggershape=(coversignal OR sellsignal ) * shapeHollowSquare * ( Sell OR Cover ) ;

PlotShapes( SLtriggershape, IIf(skprofit>0,colorGreen,colorRed), 0, skexprice, -1,0);
PlotShapes( TGtriggershape, IIf(skprofit>0,colorGreen,colorRed), 0, skexprice, -1,1);
PlotShapes( sellcovertriggershape, IIf(skprofit>0,colorGreen,colorRed), 0, skexprice, -1,2);
printf("\nProfit="+skprofit);
//plottext("P="+skprofit,0,LastValue(skexprice),colorGreen);
*/
}

if(1==0) // buy sell arrow draw based on rLow
{
skrvars_print=",o:"+O+"c:"+C;

//LongTrue = Flip(Buy, Sell) || Sell;
//ShortTrue = Flip(Short, Cover) || Cover;

Buyshape = Buy * shapeSmallUpTriangle;
SellShape = Sell * shapeStar;
PlotShapes( Buyshape, colorGreen, 1, BuyPrice, -1 );
//PlotShapes( Buyshape, colorYellow, 0, rLow+10, -10 );
//PlotText( "BUY@" + BuyPrice[0] + skrvars_print , 0, LastValue(rLow), colorGreen);
PlotShapes( SellShape, colorBlue, 0, SellPrice, -1 );

Shortshape = Short * shapeSmallDownTriangle;
CoverShape = Cover * shapeStar;
PlotShapes( Shortshape, colorRed, 0, ShortPrice, -1);
//PlotShapes( Shortshape, coloryellow, 0, rHigh-10, -30);
//PlotText( "Short@" + ShortPrice[0] + skrvars_print , 0, LastValue(rHigh), colorRed);
PlotShapes( CoverShape, colorBrown, 0, CoverPrice, -1 )	;


}

if(1==0) // buy sell signal sent to amigo 
{

// from here the buy and sell signals . 
_SECTION_BEGIN("AmigoTrends");
// If user want to use external targets/stop loss from afl, please unhide the below code and
// asign corresponding array values to it.

 //LT1 = sars;		// Long Target1 External
// ST1 = Null;		// Short Target1 External
// LT2 = Null;		// Long Target2 External
// ST2 = Null;		// Short Targe2 External
// LT3 = Null;		// Long Target3 External
// ST3 = Null;		// Short Target3 External
// LSL = Null;		// Long Stoploss External
// SSL = Null;		// Short Stoploss External
//LT1 = 50;		// Long Target1 External
// ST1 = 50;

//LT1=ST1=LSL=SSL=0

// AmigoC1(Open, High, Low, Close, Volume, Buy, Sell, Short, Cover);
_SECTION_END();

}

if(1==0) // write buy sell price on chart 
{
dist=BrickSize;
dist1=1.2*dist;
dist2=0.6*dist;

for( i = 0; i < BarCount; i++ ) 
{ 
//exit4time(152000);
//skrvars_print="-O:"+rOpen[i-1]+"C:"+rClose[i-1];  // for using the last candle for buy sell signals 
skrvars_print="-O:"+Open[i]+"C:"+Close[i];  // for using the current signal for buy sell signals 
skrvars_print=".";
 if( Buy[i]) 
  PlotText( "BUY@" + BuyPrice[ i ] + skrvars_print , i, Low[ i ]-5*dist[i], colorGreen);
  
 if( Short[i] )
   PlotText( "Short@" + ShortPrice[ i ] + skrvars_print , i, High[ i ]+5*dist[i], colorRed);
 
 if( Cover[i] ) 
  PlotText( "Cover@" + CoverPrice[ i ] , i, Low[ i ]-3.5*dist[i], colorRed );
 
 if( Sell[i] )
   PlotText( "Sell@" + SellPrice[ i ]  ,i, High[ i ]+3.5*dist[i], colorGreen);


printaction(Short[i],"\nw@"+ShortPrice[i]+"bar"+i+"on"+skday[i]+"-"+skmonth[i]+"-"+skyear[i]);
printaction(Cover[i],"C@"+CoverPrice[i]+"bar"+i+"on"+skday[i]+"-"+skmonth[i]+"-"+skyear[i]);
}

}


if(1==1) // final printing of msg if needed 
{
printf(skactionmsg);
}
